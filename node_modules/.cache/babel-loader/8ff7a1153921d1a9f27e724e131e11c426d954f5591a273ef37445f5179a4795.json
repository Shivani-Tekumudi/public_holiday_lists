{"ast":null,"code":"export const fetchHolidays = async selectedVal => {\n  const response = await fetch(`https://holiday-tracker-backend.labs.crio.do/holidys?country=${selectedVal}`);\n  if (!response.ok) {\n    throw new Error(\"user not found\");\n  }\n  const data = await response.json();\n  return data;\n};\nexport const countriesData = async () => {\n  const response = await fetch(\"https://holiday-tracker-backend.labs.crio.do/countries\");\n  if (!response.ok) {\n    throw new Error(\"cannot fetch Countries\");\n  } else {\n    const data = await response.json();\n    return data;\n  }\n};","map":{"version":3,"names":["fetchHolidays","selectedVal","response","fetch","ok","Error","data","json","countriesData"],"sources":["C:/Users/srinu/Downloads/public_holidays/src/api/holidayApi.tsx"],"sourcesContent":["import { Holiday,CountriesList } from \"../types/Holiday\";\r\n\r\n\r\n\r\nexport const fetchHolidays =async (selectedVal:string):Promise<Holiday> =>{\r\n    const response= await fetch(`https://holiday-tracker-backend.labs.crio.do/holidys?country=${selectedVal}`);\r\n    if(!response.ok){\r\n        throw new Error(\"user not found\")\r\n    }\r\n    const data = await response.json();\r\n    return data\r\n\r\n}\r\n\r\n\r\nexport const countriesData = async () =>{\r\nconst response = await fetch(\"https://holiday-tracker-backend.labs.crio.do/countries\")\r\nif(!response.ok){\r\n    throw new Error (\"cannot fetch Countries\");\r\n}\r\nelse{\r\n    const data =await response.json();\r\n    return data\r\n}\r\n}"],"mappings":"AAIA,OAAO,MAAMA,aAAa,GAAE,MAAOC,WAAkB,IAAqB;EACtE,MAAMC,QAAQ,GAAE,MAAMC,KAAK,CAAC,gEAAgEF,WAAW,EAAE,CAAC;EAC1G,IAAG,CAACC,QAAQ,CAACE,EAAE,EAAC;IACZ,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;EACrC;EACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AAEf,CAAC;AAGD,OAAO,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAW;EACxC,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,wDAAwD,CAAC;EACtF,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;IACZ,MAAM,IAAIC,KAAK,CAAE,wBAAwB,CAAC;EAC9C,CAAC,MACG;IACA,MAAMC,IAAI,GAAE,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACjC,OAAOD,IAAI;EACf;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}