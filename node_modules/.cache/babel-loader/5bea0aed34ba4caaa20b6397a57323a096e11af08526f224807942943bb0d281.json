{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srinu\\\\Downloads\\\\public_holidays\\\\src\\\\components\\\\HolidayForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { countriesData } from \"../api/holidayApi\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HolidayForm = ({\n  onSearch\n}) => {\n  _s();\n  const [CountriesList, setCountryList] = useState(null);\n  const [selectedVal, setSelectedVal] = React.useState(null);\n  const handleSubmit = e => {\n    onSearch();\n  };\n  const handleChange = event => {\n    setSelectedVal(event.target.value);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await countriesData();\n        setCountryList(data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array ensures the effect runs once, on component mount\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {},\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedVal,\n        onChange: e => {\n          e.target.value;\n        },\n        children: CountriesList && CountriesList.map(ele => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: ele,\n            children: \" ele\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" Fetch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(HolidayForm, \"IVka3jq6gDiAMatLwajzBfD1fPs=\");\n_c = HolidayForm;\nexport default HolidayForm;\nvar _c;\n$RefreshReg$(_c, \"HolidayForm\");","map":{"version":3,"names":["React","useState","useEffect","countriesData","jsxDEV","_jsxDEV","Fragment","_Fragment","HolidayForm","onSearch","_s","CountriesList","setCountryList","selectedVal","setSelectedVal","handleSubmit","e","handleChange","event","target","value","fetchData","data","err","console","log","children","onSubmit","onChange","map","ele","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/srinu/Downloads/public_holidays/src/components/HolidayForm.tsx"],"sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport { countriesData } from \"../api/holidayApi\";\r\nimport { CountriesList } from \"../types/Holiday\";\r\ninterface HolidayFormProps {\r\n    onSearch: () => void;\r\n  }\r\nconst HolidayForm:React.FC<HolidayFormProps> = ({onSearch}) =>{\r\n    const [CountriesList, setCountryList] = useState<[CountriesList] | null>(null);\r\n    const [selectedVal, setSelectedVal] =React.useState (null)\r\n\r\n\r\nconst handleSubmit =(e: React.FormEvent<HTMLInputElement>) : void =>{\r\n    onSearch();\r\n}\r\nconst handleChange = (event: SelectChangeEvent) => {\r\n    setSelectedVal(event.target.value as string);\r\n  };\r\n\r\nuseEffect( () =>{\r\n    const fetchData = async () => {\r\n        try {\r\n          const data = await countriesData();\r\n          setCountryList(data);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n  \r\n      fetchData();\r\n    }, []); // Empty dependency array ensures the effect runs once, on component mount\r\n   \r\n\r\n\r\n    return(\r\n        <>\r\n        <form onSubmit={(e) => {}}>\r\n            <select value={selectedVal} onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>{e.target.value}}>\r\n                {CountriesList &&CountriesList.map((ele) =>{\r\n                    return(<option value={ele} > ele</option>)\r\n                })}\r\n                \r\n              \r\n            </select>\r\n            <button> Fetch</button>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\nexport default HolidayForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,SAASC,aAAa,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAKlD,MAAMC,WAAsC,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAI;EAAAC,EAAA;EAC1D,MAAM,CAACC,aAAa,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAyB,IAAI,CAAC;EAC9E,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAEd,KAAK,CAACC,QAAQ,CAAE,IAAI,CAAC;EAG9D,MAAMc,YAAY,GAAGC,CAAoC,IAAW;IAChEP,QAAQ,CAAC,CAAC;EACd,CAAC;EACD,MAAMQ,YAAY,GAAIC,KAAwB,IAAK;IAC/CJ,cAAc,CAACI,KAAK,CAACC,MAAM,CAACC,KAAe,CAAC;EAC9C,CAAC;EAEHlB,SAAS,CAAE,MAAK;IACZ,MAAMmB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMnB,aAAa,CAAC,CAAC;QAClCS,cAAc,CAACU,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF,CAAC;IAEDF,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAIR,oBACIhB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACArB,OAAA;MAAMsB,QAAQ,EAAGX,CAAC,IAAK,CAAC,CAAE;MAAAU,QAAA,gBACtBrB,OAAA;QAAQe,KAAK,EAAEP,WAAY;QAACe,QAAQ,EAAGZ,CAAuC,IAAI;UAACA,CAAC,CAACG,MAAM,CAACC,KAAK;QAAA,CAAE;QAAAM,QAAA,EAC9Ff,aAAa,IAAGA,aAAa,CAACkB,GAAG,CAAEC,GAAG,IAAI;UACvC,oBAAOzB,OAAA;YAAQe,KAAK,EAAEU,GAAI;YAAAJ,QAAA,EAAE;UAAI;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAC7C,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGE,CAAC,eACT7B,OAAA;QAAAqB,QAAA,EAAQ;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB;EAAC,gBACL,CAAC;AAEX,CAAC;AAAAxB,EAAA,CAzCKF,WAAsC;AAAA2B,EAAA,GAAtC3B,WAAsC;AA0C5C,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}