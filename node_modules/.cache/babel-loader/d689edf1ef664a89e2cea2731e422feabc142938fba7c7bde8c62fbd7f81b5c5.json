{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srinu\\\\Downloads\\\\public_holidays\\\\src\\\\components\\\\HolidayForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n\n// import { countriesData } from \"../api/holidayApi\";\n// import { CountriesList } from \"../types/Holiday\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HolidayForm = ({\n  onSearch\n}) => {\n  _s();\n  const [countries, setCountries] = useState(null);\n  const [selectedVal, setSelectedVal] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSearch(selectedVal);\n  };\n  const handleChange = event => {\n    setSelectedVal(event.target.value);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"https://holiday-tracker-backend.labs.crio.do/countries\");\n        const data = await response.json();\n        setCountries(data);\n      } catch (err) {\n        console.log(err);\n        setCountries(null);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array ensures the effect runs once, on component mount\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"holiday-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"country-select\",\n        className: \"form-select\",\n        value: selectedVal,\n        onChange: handleChange,\n        children: countries && countries.map((country, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country,\n          children: [country, \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"fetch-holidays\",\n        type: \"submit\",\n        children: \" fetch holidays\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(HolidayForm, \"0WlGoRK1bTD8SOE6h4TW004PFdg=\");\n_c = HolidayForm;\nexport default HolidayForm;\nvar _c;\n$RefreshReg$(_c, \"HolidayForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","HolidayForm","onSearch","_s","countries","setCountries","selectedVal","setSelectedVal","handleSubmit","e","preventDefault","handleChange","event","target","value","fetchData","response","fetch","data","json","err","console","log","children","id","onSubmit","className","onChange","map","country","index","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/srinu/Downloads/public_holidays/src/components/HolidayForm.tsx"],"sourcesContent":["import React,{useState,useEffect, FormEvent} from \"react\";\r\nimport axios from \"axios\";\r\n// import { countriesData } from \"../api/holidayApi\";\r\n// import { CountriesList } from \"../types/Holiday\";\r\ninterface HolidayFormProps {\r\n    onSearch: (selectVal:string) => void;\r\n  }\r\nconst HolidayForm:React.FC<HolidayFormProps> = ({onSearch}) =>{\r\n    const  [countries, setCountries] = useState<string[] | null>(null)\r\n    const [selectedVal, setSelectedVal] = useState<string>(\"\")\r\n\r\n\r\nconst handleSubmit =(e: FormEvent) : void =>{\r\n    e.preventDefault();\r\n    onSearch(selectedVal);\r\n}\r\nconst handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedVal(event.target.value as string);\r\n   \r\n  };\r\n\r\nuseEffect( () =>{\r\n    const fetchData = async () => {\r\n        try {\r\n          const response = await fetch(\"https://holiday-tracker-backend.labs.crio.do/countries\");\r\n         \r\n            const data =await response.json();\r\n            setCountries(data);\r\n           \r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n            setCountries(null);\r\n        }\r\n         \r\n        \r\n      };\r\n  \r\n      fetchData();\r\n    }, []); // Empty dependency array ensures the effect runs once, on component mount\r\n   \r\n\r\n\r\n    return(\r\n        <>\r\n        <form id=\"holiday-form\" onSubmit={handleSubmit}>\r\n            <select  id=\"country-select\" className=\"form-select\" value={selectedVal} onChange={handleChange}>\r\n               \r\n                {countries && countries.map((country, index) => (\r\n          <option key={index} value={country}>\r\n            {country} {/* Display country name */}\r\n          </option>\r\n        ))\r\n                }\r\n                \r\n              \r\n            </select>\r\n            <button id=\"fetch-holidays\" type=\"submit\"> fetch holidays</button>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\nexport default HolidayForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAkB,OAAO;;AAEzD;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAIA,MAAMC,WAAsC,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAI;EAAAC,EAAA;EAC1D,MAAO,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAkB,IAAI,CAAC;EAClE,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAG9D,MAAMa,YAAY,GAAGC,CAAY,IAAW;IACxCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBR,QAAQ,CAACI,WAAW,CAAC;EACzB,CAAC;EACD,MAAMK,YAAY,GAAIC,KAA2C,IAAK;IAClEL,cAAc,CAACK,KAAK,CAACC,MAAM,CAACC,KAAe,CAAC;EAE9C,CAAC;EAEHlB,SAAS,CAAE,MAAK;IACZ,MAAMmB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wDAAwD,CAAC;QAEpF,MAAMC,IAAI,GAAE,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACjCd,YAAY,CAACa,IAAI,CAAC;MAEtB,CAAC,CACD,OAAME,GAAG,EAAC;QACNC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChBf,YAAY,CAAC,IAAI,CAAC;MACtB;IAGF,CAAC;IAEDU,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAIR,oBACIjB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,eACAzB,OAAA;MAAM0B,EAAE,EAAC,cAAc;MAACC,QAAQ,EAAEjB,YAAa;MAAAe,QAAA,gBAC3CzB,OAAA;QAAS0B,EAAE,EAAC,gBAAgB;QAACE,SAAS,EAAC,aAAa;QAACZ,KAAK,EAAER,WAAY;QAACqB,QAAQ,EAAEhB,YAAa;QAAAY,QAAA,EAE3FnB,SAAS,IAAIA,SAAS,CAACwB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACjDhC,OAAA;UAAoBgB,KAAK,EAAEe,OAAQ;UAAAN,QAAA,GAChCM,OAAO,EAAC,GAAC;QAAA,GADCC,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIU,CAAC,eACTpC,OAAA;QAAQ0B,EAAE,EAAC,gBAAgB;QAACW,IAAI,EAAC,QAAQ;QAAAZ,QAAA,EAAC;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE;EAAC,gBACL,CAAC;AAEX,CAAC;AAAA/B,EAAA,CAtDKF,WAAsC;AAAAmC,EAAA,GAAtCnC,WAAsC;AAuD5C,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}